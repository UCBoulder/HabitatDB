import { autoGenerateValue } from '../../helpers/auto-generate-attribute-value';
import { BaseAttributeMetadata, } from './base-attribute-metadata';
export const IsAutoGeneratedAttributeMetadata = (attr) => !!attr.strategy;
export class AutoGeneratedAttributeMetadata extends BaseAttributeMetadata {
    strategy;
    autoUpdate;
    unique;
    constructor(options) {
        const { strategy, autoUpdate } = options;
        super(options);
        this.autoUpdate = !!autoUpdate;
        this.strategy = strategy;
    }
    get value() {
        return autoGenerateValue(this.strategy);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1nZW5lcmF0ZWQtYXR0cmlidXRlLW1ldGFkYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvY2xhc3Nlcy9tZXRhZGF0YS9hdXRvLWdlbmVyYXRlZC1hdHRyaWJ1dGUtbWV0YWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sNkNBQTZDLENBQUM7QUFDOUUsT0FBTyxFQUNMLHFCQUFxQixHQUV0QixNQUFNLDJCQUEyQixDQUFDO0FBRW5DLE1BQU0sQ0FBQyxNQUFNLGdDQUFnQyxHQUFHLENBQzlDLElBQVMsRUFDK0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0FBUTdELE1BQU0sT0FBTyw4QkFBK0IsU0FBUSxxQkFBcUI7SUFDOUQsUUFBUSxDQUFtQztJQUMzQyxVQUFVLENBQVU7SUFDcEIsTUFBTSxDQUFVO0lBRXpCLFlBQVksT0FBOEM7UUFDeEQsTUFBTSxFQUFDLFFBQVEsRUFBRSxVQUFVLEVBQUMsR0FBRyxPQUFPLENBQUM7UUFDdkMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDO1FBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzNCLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMxQyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FVVE9fR0VORVJBVEVfQVRUUklCVVRFX1NUUkFURUdZfSBmcm9tICdAdHlwZWRvcm0vY29tbW9uJztcbmltcG9ydCB7YXV0b0dlbmVyYXRlVmFsdWV9IGZyb20gJy4uLy4uL2hlbHBlcnMvYXV0by1nZW5lcmF0ZS1hdHRyaWJ1dGUtdmFsdWUnO1xuaW1wb3J0IHtcbiAgQmFzZUF0dHJpYnV0ZU1ldGFkYXRhLFxuICBCYXNlQXR0cmlidXRlTWV0YWRhdGFPcHRpb25zLFxufSBmcm9tICcuL2Jhc2UtYXR0cmlidXRlLW1ldGFkYXRhJztcblxuZXhwb3J0IGNvbnN0IElzQXV0b0dlbmVyYXRlZEF0dHJpYnV0ZU1ldGFkYXRhID0gKFxuICBhdHRyOiBhbnlcbik6IGF0dHIgaXMgQXV0b0dlbmVyYXRlZEF0dHJpYnV0ZU1ldGFkYXRhID0+ICEhYXR0ci5zdHJhdGVneTtcblxuZXhwb3J0IGludGVyZmFjZSBBdXRvR2VuZXJhdGVkQXR0cmlidXRlTWV0YWRhdGFPcHRpb25zXG4gIGV4dGVuZHMgQmFzZUF0dHJpYnV0ZU1ldGFkYXRhT3B0aW9ucyB7XG4gIHN0cmF0ZWd5OiBBVVRPX0dFTkVSQVRFX0FUVFJJQlVURV9TVFJBVEVHWTtcbiAgYXV0b1VwZGF0ZT86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjbGFzcyBBdXRvR2VuZXJhdGVkQXR0cmlidXRlTWV0YWRhdGEgZXh0ZW5kcyBCYXNlQXR0cmlidXRlTWV0YWRhdGEge1xuICByZWFkb25seSBzdHJhdGVneTogQVVUT19HRU5FUkFURV9BVFRSSUJVVEVfU1RSQVRFR1k7XG4gIHJlYWRvbmx5IGF1dG9VcGRhdGU6IGJvb2xlYW47XG4gIHJlYWRvbmx5IHVuaXF1ZTogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBBdXRvR2VuZXJhdGVkQXR0cmlidXRlTWV0YWRhdGFPcHRpb25zKSB7XG4gICAgY29uc3Qge3N0cmF0ZWd5LCBhdXRvVXBkYXRlfSA9IG9wdGlvbnM7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gICAgdGhpcy5hdXRvVXBkYXRlID0gISFhdXRvVXBkYXRlO1xuICAgIHRoaXMuc3RyYXRlZ3kgPSBzdHJhdGVneTtcbiAgfVxuXG4gIGdldCB2YWx1ZSgpIHtcbiAgICByZXR1cm4gYXV0b0dlbmVyYXRlVmFsdWUodGhpcy5zdHJhdGVneSk7XG4gIH1cbn1cbiJdfQ==