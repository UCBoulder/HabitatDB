import { DocumentClientTypes } from '@typedorm/document-client';
import { EntityTarget } from '@typedorm/common';
import { Connection } from '../connection/connection';
import { MetadataOptions } from './base-transformer';
import { LowOrderTransformers } from './low-order-transformers';
interface ScanTransformerToDynamoScanOptions {
    entity?: EntityTarget<any>;
    scanIndex?: string;
    limit?: number;
    cursor?: DocumentClientTypes.Key;
    where?: any;
    select?: any[];
    onlyCount?: boolean;
    segment?: number;
    totalSegments?: number;
}
export declare class DocumentClientScanTransformer extends LowOrderTransformers {
    constructor(connection: Connection);
    /**
     * Transforms TypeDORM input into dynamo scan operation input
     */
    toDynamoScanItem(scanOptions?: ScanTransformerToDynamoScanOptions, metadataOptions?: MetadataOptions): DocumentClientTypes.ScanInput;
    /**
     * Transforms DynamoDB scan output into entities
     */
    fromDynamoScanResponseItemList<T>(itemList: DocumentClientTypes.ItemList, metadataOptions?: MetadataOptions): {
        items: T[];
        unknownItems: DocumentClientTypes.AttributeMap[];
    };
}
export {};
