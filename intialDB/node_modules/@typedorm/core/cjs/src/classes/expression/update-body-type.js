"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSetOperatorComplexValueType = void 0;
const is_empty_object_1 = require("../../helpers/is-empty-object");
/**
 * Type Guards
 */
const isSetOperatorComplexValueType = (value) => {
    return !!(!(0, is_empty_object_1.isEmptyObject)(value) && value['$PATH']);
};
exports.isSetOperatorComplexValueType = isSetOperatorComplexValueType;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBkYXRlLWJvZHktdHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2NsYXNzZXMvZXhwcmVzc2lvbi91cGRhdGUtYm9keS10eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLG1FQUE0RDtBQUU1RDs7R0FFRztBQUNJLE1BQU0sNkJBQTZCLEdBQUcsQ0FDM0MsS0FBVSxFQUM2QixFQUFFO0lBQ3pDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFBLCtCQUFhLEVBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFDckQsQ0FBQyxDQUFDO0FBSlcsUUFBQSw2QkFBNkIsaUNBSXhDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtVcGRhdGVUeXBlLCBSZXF1aXJlT25seU9uZSwgSW52YWxpZFR5cGV9IGZyb20gJ0B0eXBlZG9ybS9jb21tb24nO1xuaW1wb3J0IHtpc0VtcHR5T2JqZWN0fSBmcm9tICcuLi8uLi9oZWxwZXJzL2lzLWVtcHR5LW9iamVjdCc7XG5cbi8qKlxuICogVHlwZSBHdWFyZHNcbiAqL1xuZXhwb3J0IGNvbnN0IGlzU2V0T3BlcmF0b3JDb21wbGV4VmFsdWVUeXBlID0gKFxuICB2YWx1ZTogYW55XG4pOiB2YWx1ZSBpcyB7JFBBVEg6IHN0cmluZzsgJFZBTFVFOiBhbnl9ID0+IHtcbiAgcmV0dXJuICEhKCFpc0VtcHR5T2JqZWN0KHZhbHVlKSAmJiB2YWx1ZVsnJFBBVEgnXSk7XG59O1xuXG4vKipcbiAqICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAqIFNldCBBY3Rpb25cbiAqL1xudHlwZSBBYnN0cmFjdFNldFZhbHVlVHlwZTxcbiAgRW50aXR5LFxuICBlbktleSBleHRlbmRzIGtleW9mIEVudGl0eVxuPiA9IChFbnRpdHlbZW5LZXldIGV4dGVuZHMgbnVtYmVyXG4gID8ge1xuICAgICAgW2tleSBpbiBVcGRhdGVUeXBlLkFyaXRobWV0aWNPcGVyYXRvcl0/OiBudW1iZXI7XG4gICAgfVxuICA6IEVudGl0eVtlbktleV0gZXh0ZW5kcyBhbnlbXVxuICA/IHtcbiAgICAgIExJU1RfQVBQRU5EPzogRW50aXR5W2VuS2V5XSB8IHskVkFMVUU6IEVudGl0eVtlbktleV07ICRQQVRIOiBzdHJpbmd9O1xuICAgIH1cbiAgOiB7fSkgJiB7XG4gIElGX05PVF9FWElTVFM/OiBFbnRpdHlbZW5LZXldIHwgeyRWQUxVRTogRW50aXR5W2VuS2V5XTsgJFBBVEg6IHN0cmluZ307XG59O1xuXG50eXBlIFNldEltcGxpY2l0VmFsdWVUeXBlPEVudGl0eSwgZW5LZXkgZXh0ZW5kcyBrZXlvZiBFbnRpdHk+ID1cbiAgfCBSZXF1aXJlT25seU9uZTxcbiAgICAgIC8vIHNldCB2YWx1ZSB0eXBlXG4gICAgICBBYnN0cmFjdFNldFZhbHVlVHlwZTxFbnRpdHksIGVuS2V5PlxuICAgID5cbiAgLy8gc2ltcGxlIGF0dHJpYnV0ZSB0eXBlIHZhbHVlXG4gIHwgRW50aXR5W2VuS2V5XTtcblxudHlwZSBTZXRFeHBsaWNpdFZhbHVlVHlwZTxFbnRpdHksIGVuS2V5IGV4dGVuZHMga2V5b2YgRW50aXR5PiA9IFJlcXVpcmVPbmx5T25lPHtcbiAgU0VUPzpcbiAgICB8IEFic3RyYWN0U2V0VmFsdWVUeXBlPEVudGl0eSwgZW5LZXk+XG4gICAgLy8gc2ltcGxlIGF0dHJpYnV0ZSB0eXBlIHZhbHVlXG4gICAgfCBFbnRpdHlbZW5LZXldO1xufT47XG5cbnR5cGUgU2V0VmFsdWVUeXBlPEVudGl0eSwgZW5LZXkgZXh0ZW5kcyBrZXlvZiBFbnRpdHk+ID1cbiAgfCBTZXRJbXBsaWNpdFZhbHVlVHlwZTxFbnRpdHksIGVuS2V5PlxuICAvLyBleHBsaWNpdCBzZXQgIHR5cGVcbiAgLy8gYWxtb3N0IGlkZW50aWNhbCB0byBpbXBsaWNpdCB0eXBlIGJ1dCBoYXMgbW9yZSBleHBsaWNpdCBzeW50YXhcbiAgfCBTZXRFeHBsaWNpdFZhbHVlVHlwZTxFbnRpdHksIGVuS2V5Pjtcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbi8qKlxuICogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICogQUREIEFjdGlvblxuICovXG50eXBlIEFkZFZhbHVlVHlwZTxFbnRpdHksIGVuS2V5IGV4dGVuZHMga2V5b2YgRW50aXR5PiA9IFJlcXVpcmVPbmx5T25lPHtcbiAgQUREPzogRW50aXR5W2VuS2V5XSBleHRlbmRzIG51bWJlciB8IGFueVtdXG4gICAgPyBFbnRpdHlbZW5LZXldXG4gICAgOiBJbnZhbGlkVHlwZTxcbiAgICAgICAgW1xuICAgICAgICAgICdudW1iZXIgfCBhbnlbXScsXG4gICAgICAgICAgXCJVcGRhdGUgYWN0aW9uICdBREQnIGNhbiBub3QgYmUgdXNlZCBmb3IgYXR0cmlidXRlXCIsXG4gICAgICAgICAgZW5LZXlcbiAgICAgICAgXVxuICAgICAgPjtcbn0+O1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuLyoqXG4gKiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKiBSRU1PVkUgQWN0aW9uXG4gKi9cbnR5cGUgUmVtb3ZlVmFsdWVUeXBlPEVudGl0eSwgZW5LZXkgZXh0ZW5kcyBrZXlvZiBFbnRpdHk+ID0gUmVxdWlyZU9ubHlPbmU8e1xuICBSRU1PVkU/OiBFbnRpdHlbZW5LZXldIGV4dGVuZHMgYW55W11cbiAgICA/IHskQVRfSU5ERVg6IG51bWJlcltdfSB8IGJvb2xlYW5cbiAgICA6IGJvb2xlYW47XG59Pjtcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbi8qKlxuICogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICogREVMRVRFIEFjdGlvblxuICovXG50eXBlIERlbGV0ZVZhbHVlVHlwZTxFbnRpdHksIGVuS2V5IGV4dGVuZHMga2V5b2YgRW50aXR5PiA9IFJlcXVpcmVPbmx5T25lPHtcbiAgREVMRVRFPzogRW50aXR5W2VuS2V5XSBleHRlbmRzIGFueVtdXG4gICAgPyBFbnRpdHlbZW5LZXldXG4gICAgOiBJbnZhbGlkVHlwZTxcbiAgICAgICAgW2FueVtdLCBcIlVwZGF0ZSBhY3Rpb24gJ0RFTEVURScgY2FuIG5vdCBiZSB1c2VkIGZvciBhdHRyaWJ1dGVcIiwgZW5LZXldXG4gICAgICA+O1xufT47XG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4vKipcbiAqIFVwZGF0ZSBCb2R5XG4gKi9cbmV4cG9ydCB0eXBlIFVwZGF0ZUJvZHk8RW50aXR5LCBBZGRpdGlvbmFsUHJvcGVydGllcz4gPSB7XG4gIC8vIGltcGxpY2l0IHNldCAgdHlwZVxuICBbZW5LZXkgaW4ga2V5b2YgRW50aXR5XT86XG4gICAgfCBTZXRWYWx1ZVR5cGU8RW50aXR5LCBlbktleT5cbiAgICB8IEFkZFZhbHVlVHlwZTxFbnRpdHksIGVuS2V5PlxuICAgIHwgUmVtb3ZlVmFsdWVUeXBlPEVudGl0eSwgZW5LZXk+XG4gICAgfCBEZWxldGVWYWx1ZVR5cGU8RW50aXR5LCBlbktleT47XG59ICYge1xuICAvLyBpbXBsaWNpdCBzZXQgIHR5cGVcbiAgW2FkZGl0aW9uYWxLZXkgaW4ga2V5b2YgQWRkaXRpb25hbFByb3BlcnRpZXNdPzpcbiAgICB8IFNldFZhbHVlVHlwZTxBZGRpdGlvbmFsUHJvcGVydGllcywgYWRkaXRpb25hbEtleT5cbiAgICB8IEFkZFZhbHVlVHlwZTxBZGRpdGlvbmFsUHJvcGVydGllcywgYWRkaXRpb25hbEtleT5cbiAgICB8IFJlbW92ZVZhbHVlVHlwZTxBZGRpdGlvbmFsUHJvcGVydGllcywgYWRkaXRpb25hbEtleT5cbiAgICB8IERlbGV0ZVZhbHVlVHlwZTxBZGRpdGlvbmFsUHJvcGVydGllcywgYWRkaXRpb25hbEtleT47XG59O1xuIl19