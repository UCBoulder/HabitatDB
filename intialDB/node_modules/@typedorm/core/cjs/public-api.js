"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getScanManager = exports.getBatchManager = exports.getTransactionManger = exports.getEntityManager = exports.getConnection = exports.createConnections = exports.createConnection = exports.AutoGenerateAttributeValue = exports.Connection = void 0;
const container_1 = require("./src/classes/container");
const connection_manager_1 = require("./src/classes/connection/connection-manager");
// options
__exportStar(require("./src/classes/connection/connection-options"), exports);
// models
__exportStar(require("./src/classes/expression/condition"), exports);
__exportStar(require("./src/classes/expression/key-condition"), exports);
__exportStar(require("./src/classes/transaction/write-transaction"), exports);
__exportStar(require("./src/classes/transaction/read-transaction"), exports);
__exportStar(require("./src/classes/batch/write-batch"), exports);
__exportStar(require("./src/classes/batch/read-batch"), exports);
// managers
__exportStar(require("./src/classes/manager/entity-manager"), exports);
__exportStar(require("./src/classes/manager/batch-manager"), exports);
__exportStar(require("./src/classes/manager/transaction-manager"), exports);
__exportStar(require("./src/classes/manager/scan-manager"), exports);
// classes
var connection_1 = require("./src/classes/connection/connection");
Object.defineProperty(exports, "Connection", { enumerable: true, get: function () { return connection_1.Connection; } });
// helpers
var auto_generate_attribute_value_1 = require("./src/helpers/auto-generate-attribute-value");
Object.defineProperty(exports, "AutoGenerateAttributeValue", { enumerable: true, get: function () { return auto_generate_attribute_value_1.AutoGenerateAttributeValue; } });
// public method exports
function createConnection(options) {
    const connection = connectionManger().create(options);
    const connected = connection.connect();
    if (!connected) {
        throw new Error(`Failed to create connection with options: ${JSON.stringify(options)}`);
    }
    return connected;
}
exports.createConnection = createConnection;
function createConnections(optionsList) {
    return optionsList.map(options => createConnection(options));
}
exports.createConnections = createConnections;
function getConnection() {
    return container_1.Container.get(connection_manager_1.ConnectionManager).get();
}
exports.getConnection = getConnection;
function getEntityManager(connectionName) {
    return connectionManger().get(connectionName).entityManager;
}
exports.getEntityManager = getEntityManager;
function getTransactionManger(connectionName) {
    return connectionManger().get(connectionName).transactionManger;
}
exports.getTransactionManger = getTransactionManger;
function getBatchManager(connectionName) {
    return connectionManger().get(connectionName).batchManager;
}
exports.getBatchManager = getBatchManager;
function getScanManager(connectionName) {
    return connectionManger().get(connectionName).scanManager;
}
exports.getScanManager = getScanManager;
// private methods
function connectionManger() {
    return container_1.Container.get(connection_manager_1.ConnectionManager);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLHVEQUFrRDtBQUNsRCxvRkFBOEU7QUFFOUUsVUFBVTtBQUNWLDhFQUE0RDtBQUU1RCxTQUFTO0FBQ1QscUVBQW1EO0FBQ25ELHlFQUF1RDtBQUN2RCw4RUFBNEQ7QUFDNUQsNkVBQTJEO0FBQzNELGtFQUFnRDtBQUNoRCxpRUFBK0M7QUFFL0MsV0FBVztBQUNYLHVFQUFxRDtBQUNyRCxzRUFBb0Q7QUFDcEQsNEVBQTBEO0FBQzFELHFFQUFtRDtBQUVuRCxVQUFVO0FBQ1Ysa0VBQStEO0FBQXZELHdHQUFBLFVBQVUsT0FBQTtBQUVsQixVQUFVO0FBQ1YsNkZBQXVGO0FBQS9FLDJJQUFBLDBCQUEwQixPQUFBO0FBRWxDLHdCQUF3QjtBQUV4QixTQUFnQixnQkFBZ0IsQ0FBQyxPQUEwQjtJQUN6RCxNQUFNLFVBQVUsR0FBRyxnQkFBZ0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUV0RCxNQUFNLFNBQVMsR0FBRyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUM7SUFFdkMsSUFBSSxDQUFDLFNBQVMsRUFBRTtRQUNkLE1BQU0sSUFBSSxLQUFLLENBQ2IsNkNBQTZDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FDdkUsQ0FBQztLQUNIO0lBRUQsT0FBTyxTQUFTLENBQUM7QUFDbkIsQ0FBQztBQVpELDRDQVlDO0FBRUQsU0FBZ0IsaUJBQWlCLENBQUMsV0FBZ0M7SUFDaEUsT0FBTyxXQUFXLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUMvRCxDQUFDO0FBRkQsOENBRUM7QUFFRCxTQUFnQixhQUFhO0lBQzNCLE9BQU8scUJBQVMsQ0FBQyxHQUFHLENBQUMsc0NBQWlCLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUNoRCxDQUFDO0FBRkQsc0NBRUM7QUFFRCxTQUFnQixnQkFBZ0IsQ0FBQyxjQUF1QjtJQUN0RCxPQUFPLGdCQUFnQixFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDLGFBQWEsQ0FBQztBQUM5RCxDQUFDO0FBRkQsNENBRUM7QUFFRCxTQUFnQixvQkFBb0IsQ0FBQyxjQUF1QjtJQUMxRCxPQUFPLGdCQUFnQixFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDO0FBQ2xFLENBQUM7QUFGRCxvREFFQztBQUVELFNBQWdCLGVBQWUsQ0FBQyxjQUF1QjtJQUNyRCxPQUFPLGdCQUFnQixFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDLFlBQVksQ0FBQztBQUM3RCxDQUFDO0FBRkQsMENBRUM7QUFFRCxTQUFnQixjQUFjLENBQUMsY0FBdUI7SUFDcEQsT0FBTyxnQkFBZ0IsRUFBRSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQyxXQUFXLENBQUM7QUFDNUQsQ0FBQztBQUZELHdDQUVDO0FBRUQsa0JBQWtCO0FBRWxCLFNBQVMsZ0JBQWdCO0lBQ3ZCLE9BQU8scUJBQVMsQ0FBQyxHQUFHLENBQUMsc0NBQWlCLENBQUMsQ0FBQztBQUMxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb25uZWN0aW9uT3B0aW9uc30gZnJvbSAnLi9zcmMvY2xhc3Nlcy9jb25uZWN0aW9uL2Nvbm5lY3Rpb24tb3B0aW9ucyc7XG5pbXBvcnQge0NvbnRhaW5lcn0gZnJvbSAnLi9zcmMvY2xhc3Nlcy9jb250YWluZXInO1xuaW1wb3J0IHtDb25uZWN0aW9uTWFuYWdlcn0gZnJvbSAnLi9zcmMvY2xhc3Nlcy9jb25uZWN0aW9uL2Nvbm5lY3Rpb24tbWFuYWdlcic7XG5cbi8vIG9wdGlvbnNcbmV4cG9ydCAqIGZyb20gJy4vc3JjL2NsYXNzZXMvY29ubmVjdGlvbi9jb25uZWN0aW9uLW9wdGlvbnMnO1xuXG4vLyBtb2RlbHNcbmV4cG9ydCAqIGZyb20gJy4vc3JjL2NsYXNzZXMvZXhwcmVzc2lvbi9jb25kaXRpb24nO1xuZXhwb3J0ICogZnJvbSAnLi9zcmMvY2xhc3Nlcy9leHByZXNzaW9uL2tleS1jb25kaXRpb24nO1xuZXhwb3J0ICogZnJvbSAnLi9zcmMvY2xhc3Nlcy90cmFuc2FjdGlvbi93cml0ZS10cmFuc2FjdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL3NyYy9jbGFzc2VzL3RyYW5zYWN0aW9uL3JlYWQtdHJhbnNhY3Rpb24nO1xuZXhwb3J0ICogZnJvbSAnLi9zcmMvY2xhc3Nlcy9iYXRjaC93cml0ZS1iYXRjaCc7XG5leHBvcnQgKiBmcm9tICcuL3NyYy9jbGFzc2VzL2JhdGNoL3JlYWQtYmF0Y2gnO1xuXG4vLyBtYW5hZ2Vyc1xuZXhwb3J0ICogZnJvbSAnLi9zcmMvY2xhc3Nlcy9tYW5hZ2VyL2VudGl0eS1tYW5hZ2VyJztcbmV4cG9ydCAqIGZyb20gJy4vc3JjL2NsYXNzZXMvbWFuYWdlci9iYXRjaC1tYW5hZ2VyJztcbmV4cG9ydCAqIGZyb20gJy4vc3JjL2NsYXNzZXMvbWFuYWdlci90cmFuc2FjdGlvbi1tYW5hZ2VyJztcbmV4cG9ydCAqIGZyb20gJy4vc3JjL2NsYXNzZXMvbWFuYWdlci9zY2FuLW1hbmFnZXInO1xuXG4vLyBjbGFzc2VzXG5leHBvcnQge0Nvbm5lY3Rpb259IGZyb20gJy4vc3JjL2NsYXNzZXMvY29ubmVjdGlvbi9jb25uZWN0aW9uJztcblxuLy8gaGVscGVyc1xuZXhwb3J0IHtBdXRvR2VuZXJhdGVBdHRyaWJ1dGVWYWx1ZX0gZnJvbSAnLi9zcmMvaGVscGVycy9hdXRvLWdlbmVyYXRlLWF0dHJpYnV0ZS12YWx1ZSc7XG5cbi8vIHB1YmxpYyBtZXRob2QgZXhwb3J0c1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvbihvcHRpb25zOiBDb25uZWN0aW9uT3B0aW9ucykge1xuICBjb25zdCBjb25uZWN0aW9uID0gY29ubmVjdGlvbk1hbmdlcigpLmNyZWF0ZShvcHRpb25zKTtcblxuICBjb25zdCBjb25uZWN0ZWQgPSBjb25uZWN0aW9uLmNvbm5lY3QoKTtcblxuICBpZiAoIWNvbm5lY3RlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBGYWlsZWQgdG8gY3JlYXRlIGNvbm5lY3Rpb24gd2l0aCBvcHRpb25zOiAke0pTT04uc3RyaW5naWZ5KG9wdGlvbnMpfWBcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIGNvbm5lY3RlZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb25zKG9wdGlvbnNMaXN0OiBDb25uZWN0aW9uT3B0aW9uc1tdKSB7XG4gIHJldHVybiBvcHRpb25zTGlzdC5tYXAob3B0aW9ucyA9PiBjcmVhdGVDb25uZWN0aW9uKG9wdGlvbnMpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbm5lY3Rpb24oKSB7XG4gIHJldHVybiBDb250YWluZXIuZ2V0KENvbm5lY3Rpb25NYW5hZ2VyKS5nZXQoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEVudGl0eU1hbmFnZXIoY29ubmVjdGlvbk5hbWU/OiBzdHJpbmcpIHtcbiAgcmV0dXJuIGNvbm5lY3Rpb25NYW5nZXIoKS5nZXQoY29ubmVjdGlvbk5hbWUpLmVudGl0eU1hbmFnZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmFuc2FjdGlvbk1hbmdlcihjb25uZWN0aW9uTmFtZT86IHN0cmluZykge1xuICByZXR1cm4gY29ubmVjdGlvbk1hbmdlcigpLmdldChjb25uZWN0aW9uTmFtZSkudHJhbnNhY3Rpb25NYW5nZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRCYXRjaE1hbmFnZXIoY29ubmVjdGlvbk5hbWU/OiBzdHJpbmcpIHtcbiAgcmV0dXJuIGNvbm5lY3Rpb25NYW5nZXIoKS5nZXQoY29ubmVjdGlvbk5hbWUpLmJhdGNoTWFuYWdlcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNjYW5NYW5hZ2VyKGNvbm5lY3Rpb25OYW1lPzogc3RyaW5nKSB7XG4gIHJldHVybiBjb25uZWN0aW9uTWFuZ2VyKCkuZ2V0KGNvbm5lY3Rpb25OYW1lKS5zY2FuTWFuYWdlcjtcbn1cblxuLy8gcHJpdmF0ZSBtZXRob2RzXG5cbmZ1bmN0aW9uIGNvbm5lY3Rpb25NYW5nZXIoKSB7XG4gIHJldHVybiBDb250YWluZXIuZ2V0KENvbm5lY3Rpb25NYW5hZ2VyKTtcbn1cbiJdfQ==