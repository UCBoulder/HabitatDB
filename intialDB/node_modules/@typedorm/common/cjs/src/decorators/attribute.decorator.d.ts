import 'reflect-metadata';
import { ScalarType } from '../helpers/scalar-type';
import { PrimaryKey } from '../metadata/metadata-storage';
export type AttributeOptionsUniqueType<Entity = any> = boolean | PrimaryKey<Entity>;
export interface AttributeOptions<Entity> {
    /**
     * Item will be managed using transaction to ensure it's consistency
     * When value of unique is of type boolean, entity name is used to auto generated unique prefix
     * @default false
     *
     */
    unique?: AttributeOptionsUniqueType<Entity>;
    /**
     * Mark property as enum
     * @required when property of type enum is referenced in key
     * @default false
     */
    isEnum?: boolean;
    /**
     * Assign default value to attribute
     */
    default?: ScalarType | ((entity: Entity) => ScalarType);
    /**
     * Defines whether the attribute should be hidden from response returned to client
     * @default false
     */
    hidden?: boolean;
}
export declare function Attribute<Entity = any>(options?: AttributeOptions<Entity>): PropertyDecorator;
