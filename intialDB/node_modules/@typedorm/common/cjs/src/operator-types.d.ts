export declare enum ATTRIBUTE_TYPE {
    STRING = "S",
    STRING_SET = "SS",
    NUMBER = "N",
    NUMBER_SET = "NS",
    BINARY = "B",
    BINARY_SET = "BS",
    BOOLEAN = "BOOL",
    NULL = "Null",
    LIST = "L",
    MAP = "M"
}
/**
 * This is the single place where all the the document client supported
 * operators are listed
 *
 *
 */
export declare namespace KeyConditionType {
    type SimpleOperator = 'EQ' | 'LT' | 'LE' | 'GT' | 'GE';
    type FunctionOperator = 'BEGINS_WITH';
    type RangeOperator = 'BETWEEN';
}
export declare namespace ConditionType {
    type SimpleOperator = KeyConditionType.SimpleOperator | 'NE';
    type FunctionOperator = KeyConditionType.FunctionOperator | 'ATTRIBUTE_TYPE' | 'CONTAINS' | 'SIZE' | 'ATTRIBUTE_EXISTS' | 'ATTRIBUTE_NOT_EXISTS';
    type RangeOperator = KeyConditionType.RangeOperator | 'IN';
    type LogicalOperator = 'AND' | 'OR' | 'NOT';
}
export declare namespace FilterType {
    type SimpleOperator = ConditionType.SimpleOperator;
    type FunctionOperator = ConditionType.FunctionOperator;
    type RangeOperator = ConditionType.RangeOperator;
    type LogicalOperator = ConditionType.LogicalOperator;
}
export declare namespace UpdateType {
    type ArithmeticOperator = 'INCREMENT_BY' | 'DECREMENT_BY';
    type SetUpdateOperator = 'IF_NOT_EXISTS' | 'LIST_APPEND';
    type Action = 'SET' | 'REMOVE' | 'ADD' | 'DELETE';
}
export type SimpleOperator = KeyConditionType.SimpleOperator | ConditionType.SimpleOperator | FilterType.SimpleOperator;
export type RangeOperator = KeyConditionType.RangeOperator | ConditionType.RangeOperator | FilterType.RangeOperator;
