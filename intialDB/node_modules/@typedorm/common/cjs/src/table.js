"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Table = exports.IsCompositePrimaryKey = void 0;
const IsCompositePrimaryKey = (key) => !!(key.partitionKey &&
    key.sortKey);
exports.IsCompositePrimaryKey = IsCompositePrimaryKey;
class Table {
    constructor(options) {
        this.options = options;
    }
    set name(value) {
        this.options.name = value;
    }
    get name() {
        return this.options.name;
    }
    get partitionKey() {
        return this.options.partitionKey;
    }
    get sortKey() {
        if (!(0, exports.IsCompositePrimaryKey)(this.options)) {
            throw new Error('Only Tables using composite keys can have sort keys');
        }
        return this.options.sortKey;
    }
    usesCompositeKey() {
        return !!(this.options.partitionKey && this.options.sortKey);
    }
    getIndexByKey(key) {
        const { indexes = {} } = this.options;
        return indexes[key];
    }
}
exports.Table = Table;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb21tb24vc3JjL3RhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdPLE1BQU0scUJBQXFCLEdBQUcsQ0FDbkMsR0FBWSxFQUNnQixFQUFFLENBQzlCLENBQUMsQ0FBQyxDQUNDLEdBQTJCLENBQUMsWUFBWTtJQUN4QyxHQUEyQixDQUFDLE9BQU8sQ0FDckMsQ0FBQztBQU5TLFFBQUEscUJBQXFCLHlCQU05QjtBQVdKLE1BQWEsS0FBSztJQUNoQixZQUFvQixPQUFxQjtRQUFyQixZQUFPLEdBQVAsT0FBTyxDQUFjO0lBQUcsQ0FBQztJQUU3QyxJQUFJLElBQUksQ0FBQyxLQUFhO1FBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBRUQsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSSxPQUFPO1FBQ1QsSUFBSSxDQUFDLElBQUEsNkJBQXFCLEVBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ3hDLE1BQU0sSUFBSSxLQUFLLENBQUMscURBQXFELENBQUMsQ0FBQztTQUN4RTtRQUNELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7SUFDOUIsQ0FBQztJQUVELGdCQUFnQjtRQUNkLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBRUQsYUFBYSxDQUFDLEdBQVc7UUFDdkIsTUFBTSxFQUFDLE9BQU8sR0FBRyxFQUFFLEVBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3BDLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7Q0FDRjtBQTlCRCxzQkE4QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luZGV4T3B0aW9uc30gZnJvbSAnLi9pbmRleC1vcHRpb25zJztcbmltcG9ydCB7Q29tcG9zaXRlUHJpbWFyeUtleX0gZnJvbSAnLi9tZXRhZGF0YS9tZXRhZGF0YS1zdG9yYWdlJztcblxuZXhwb3J0IGNvbnN0IElzQ29tcG9zaXRlUHJpbWFyeUtleSA9IChcbiAga2V5OiB1bmtub3duXG4pOiBrZXkgaXMgQ29tcG9zaXRlUHJpbWFyeUtleSA9PlxuICAhIShcbiAgICAoa2V5IGFzIENvbXBvc2l0ZVByaW1hcnlLZXkpLnBhcnRpdGlvbktleSAmJlxuICAgIChrZXkgYXMgQ29tcG9zaXRlUHJpbWFyeUtleSkuc29ydEtleVxuICApO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRhYmxlT3B0aW9ucyB7XG4gIG5hbWU6IHN0cmluZztcbiAgcGFydGl0aW9uS2V5OiBzdHJpbmc7IC8vIGlkZW50aWZpZXIgb2YgcGFydGl0aW9uIGtleVxuICBzb3J0S2V5Pzogc3RyaW5nOyAvLyBpZGVudGlmaWVyIG9mIHNvcnQga2V5XG4gIGluZGV4ZXM/OiB7XG4gICAgW2tleTogc3RyaW5nXTogSW5kZXhPcHRpb25zO1xuICB9O1xufVxuXG5leHBvcnQgY2xhc3MgVGFibGUge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG9wdGlvbnM6IFRhYmxlT3B0aW9ucykge31cblxuICBzZXQgbmFtZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5vcHRpb25zLm5hbWUgPSB2YWx1ZTtcbiAgfVxuXG4gIGdldCBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLm9wdGlvbnMubmFtZTtcbiAgfVxuXG4gIGdldCBwYXJ0aXRpb25LZXkoKSB7XG4gICAgcmV0dXJuIHRoaXMub3B0aW9ucy5wYXJ0aXRpb25LZXk7XG4gIH1cblxuICBnZXQgc29ydEtleSgpIHtcbiAgICBpZiAoIUlzQ29tcG9zaXRlUHJpbWFyeUtleSh0aGlzLm9wdGlvbnMpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ09ubHkgVGFibGVzIHVzaW5nIGNvbXBvc2l0ZSBrZXlzIGNhbiBoYXZlIHNvcnQga2V5cycpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLnNvcnRLZXk7XG4gIH1cblxuICB1c2VzQ29tcG9zaXRlS2V5KCkge1xuICAgIHJldHVybiAhISh0aGlzLm9wdGlvbnMucGFydGl0aW9uS2V5ICYmIHRoaXMub3B0aW9ucy5zb3J0S2V5KTtcbiAgfVxuXG4gIGdldEluZGV4QnlLZXkoa2V5OiBzdHJpbmcpIHtcbiAgICBjb25zdCB7aW5kZXhlcyA9IHt9fSA9IHRoaXMub3B0aW9ucztcbiAgICByZXR1cm4gaW5kZXhlc1trZXldO1xuICB9XG59XG4iXX0=