export const IsCompositePrimaryKey = (key) => !!(key.partitionKey &&
    key.sortKey);
export class Table {
    options;
    constructor(options) {
        this.options = options;
    }
    set name(value) {
        this.options.name = value;
    }
    get name() {
        return this.options.name;
    }
    get partitionKey() {
        return this.options.partitionKey;
    }
    get sortKey() {
        if (!IsCompositePrimaryKey(this.options)) {
            throw new Error('Only Tables using composite keys can have sort keys');
        }
        return this.options.sortKey;
    }
    usesCompositeKey() {
        return !!(this.options.partitionKey && this.options.sortKey);
    }
    getIndexByKey(key) {
        const { indexes = {} } = this.options;
        return indexes[key];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb21tb24vc3JjL3RhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBQ25DLEdBQVksRUFDZ0IsRUFBRSxDQUM5QixDQUFDLENBQUMsQ0FDQyxHQUEyQixDQUFDLFlBQVk7SUFDeEMsR0FBMkIsQ0FBQyxPQUFPLENBQ3JDLENBQUM7QUFXSixNQUFNLE9BQU8sS0FBSztJQUNJO0lBQXBCLFlBQW9CLE9BQXFCO1FBQXJCLFlBQU8sR0FBUCxPQUFPLENBQWM7SUFBRyxDQUFDO0lBRTdDLElBQUksSUFBSSxDQUFDLEtBQWE7UUFDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO0lBQzNCLENBQUM7SUFFRCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDVCxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ3hDLE1BQU0sSUFBSSxLQUFLLENBQUMscURBQXFELENBQUMsQ0FBQztTQUN4RTtRQUNELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7SUFDOUIsQ0FBQztJQUVELGdCQUFnQjtRQUNkLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBRUQsYUFBYSxDQUFDLEdBQVc7UUFDdkIsTUFBTSxFQUFDLE9BQU8sR0FBRyxFQUFFLEVBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3BDLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5kZXhPcHRpb25zfSBmcm9tICcuL2luZGV4LW9wdGlvbnMnO1xuaW1wb3J0IHtDb21wb3NpdGVQcmltYXJ5S2V5fSBmcm9tICcuL21ldGFkYXRhL21ldGFkYXRhLXN0b3JhZ2UnO1xuXG5leHBvcnQgY29uc3QgSXNDb21wb3NpdGVQcmltYXJ5S2V5ID0gKFxuICBrZXk6IHVua25vd25cbik6IGtleSBpcyBDb21wb3NpdGVQcmltYXJ5S2V5ID0+XG4gICEhKFxuICAgIChrZXkgYXMgQ29tcG9zaXRlUHJpbWFyeUtleSkucGFydGl0aW9uS2V5ICYmXG4gICAgKGtleSBhcyBDb21wb3NpdGVQcmltYXJ5S2V5KS5zb3J0S2V5XG4gICk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGFibGVPcHRpb25zIHtcbiAgbmFtZTogc3RyaW5nO1xuICBwYXJ0aXRpb25LZXk6IHN0cmluZzsgLy8gaWRlbnRpZmllciBvZiBwYXJ0aXRpb24ga2V5XG4gIHNvcnRLZXk/OiBzdHJpbmc7IC8vIGlkZW50aWZpZXIgb2Ygc29ydCBrZXlcbiAgaW5kZXhlcz86IHtcbiAgICBba2V5OiBzdHJpbmddOiBJbmRleE9wdGlvbnM7XG4gIH07XG59XG5cbmV4cG9ydCBjbGFzcyBUYWJsZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgb3B0aW9uczogVGFibGVPcHRpb25zKSB7fVxuXG4gIHNldCBuYW1lKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLm9wdGlvbnMubmFtZSA9IHZhbHVlO1xuICB9XG5cbiAgZ2V0IG5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMub3B0aW9ucy5uYW1lO1xuICB9XG5cbiAgZ2V0IHBhcnRpdGlvbktleSgpIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLnBhcnRpdGlvbktleTtcbiAgfVxuXG4gIGdldCBzb3J0S2V5KCkge1xuICAgIGlmICghSXNDb21wb3NpdGVQcmltYXJ5S2V5KHRoaXMub3B0aW9ucykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignT25seSBUYWJsZXMgdXNpbmcgY29tcG9zaXRlIGtleXMgY2FuIGhhdmUgc29ydCBrZXlzJyk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLm9wdGlvbnMuc29ydEtleTtcbiAgfVxuXG4gIHVzZXNDb21wb3NpdGVLZXkoKSB7XG4gICAgcmV0dXJuICEhKHRoaXMub3B0aW9ucy5wYXJ0aXRpb25LZXkgJiYgdGhpcy5vcHRpb25zLnNvcnRLZXkpO1xuICB9XG5cbiAgZ2V0SW5kZXhCeUtleShrZXk6IHN0cmluZykge1xuICAgIGNvbnN0IHtpbmRleGVzID0ge319ID0gdGhpcy5vcHRpb25zO1xuICAgIHJldHVybiBpbmRleGVzW2tleV07XG4gIH1cbn1cbiJdfQ==