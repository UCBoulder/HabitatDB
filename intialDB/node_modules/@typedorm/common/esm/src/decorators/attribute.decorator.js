import 'reflect-metadata';
import { MetadataManager } from '../metadata/metadata-manager';
import { MissingReflectMetadataError } from '../error';
export function Attribute(options) {
    return (target, propertyKey) => {
        const reflectedMetadata = Reflect.getMetadata('design:type', target, propertyKey);
        if (!reflectedMetadata) {
            throw new MissingReflectMetadataError('design:type');
        }
        let type = reflectedMetadata.name;
        if (options?.isEnum) {
            // default to "String" when attribute is marked as enum
            type = 'String';
        }
        const attributeProps = {
            name: propertyKey.toString(),
            type,
            unique: options?.unique,
            default: options?.default,
            hidden: options?.hidden,
        };
        MetadataManager.metadataStorage.addRawAttribute(target.constructor, attributeProps);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRlLmRlY29yYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvbW1vbi9zcmMvZGVjb3JhdG9ycy9hdHRyaWJ1dGUuZGVjb3JhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sa0JBQWtCLENBQUM7QUFFMUIsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLDhCQUE4QixDQUFDO0FBSzdELE9BQU8sRUFBQywyQkFBMkIsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQStCckQsTUFBTSxVQUFVLFNBQVMsQ0FDdkIsT0FBa0M7SUFFbEMsT0FBTyxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQVEsRUFBRTtRQUNuQyxNQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQzNDLGFBQWEsRUFDYixNQUFNLEVBQ04sV0FBVyxDQUNaLENBQUM7UUFFRixJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDdEIsTUFBTSxJQUFJLDJCQUEyQixDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQ3REO1FBRUQsSUFBSSxJQUFJLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDO1FBRWxDLElBQUksT0FBTyxFQUFFLE1BQU0sRUFBRTtZQUNuQix1REFBdUQ7WUFDdkQsSUFBSSxHQUFHLFFBQVEsQ0FBQztTQUNqQjtRQUVELE1BQU0sY0FBYyxHQUFHO1lBQ3JCLElBQUksRUFBRSxXQUFXLENBQUMsUUFBUSxFQUFFO1lBQzVCLElBQUk7WUFDSixNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU07WUFDdkIsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPO1lBQ3pCLE1BQU0sRUFBRSxPQUFPLEVBQUUsTUFBTTtTQUNPLENBQUM7UUFFakMsZUFBZSxDQUFDLGVBQWUsQ0FBQyxlQUFlLENBQzdDLE1BQU0sQ0FBQyxXQUFXLEVBQ2xCLGNBQWMsQ0FDZixDQUFDO0lBQ0osQ0FBQyxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAncmVmbGVjdC1tZXRhZGF0YSc7XG5pbXBvcnQge1NjYWxhclR5cGV9IGZyb20gJy4uL2hlbHBlcnMvc2NhbGFyLXR5cGUnO1xuaW1wb3J0IHtNZXRhZGF0YU1hbmFnZXJ9IGZyb20gJy4uL21ldGFkYXRhL21ldGFkYXRhLW1hbmFnZXInO1xuaW1wb3J0IHtcbiAgQXR0cmlidXRlUmF3TWV0YWRhdGFPcHRpb25zLFxuICBQcmltYXJ5S2V5LFxufSBmcm9tICcuLi9tZXRhZGF0YS9tZXRhZGF0YS1zdG9yYWdlJztcbmltcG9ydCB7TWlzc2luZ1JlZmxlY3RNZXRhZGF0YUVycm9yfSBmcm9tICcuLi9lcnJvcic7XG5cbmV4cG9ydCB0eXBlIEF0dHJpYnV0ZU9wdGlvbnNVbmlxdWVUeXBlPEVudGl0eSA9IGFueT4gPVxuICB8IGJvb2xlYW5cbiAgfCBQcmltYXJ5S2V5PEVudGl0eT47XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXR0cmlidXRlT3B0aW9uczxFbnRpdHk+IHtcbiAgLyoqXG4gICAqIEl0ZW0gd2lsbCBiZSBtYW5hZ2VkIHVzaW5nIHRyYW5zYWN0aW9uIHRvIGVuc3VyZSBpdCdzIGNvbnNpc3RlbmN5XG4gICAqIFdoZW4gdmFsdWUgb2YgdW5pcXVlIGlzIG9mIHR5cGUgYm9vbGVhbiwgZW50aXR5IG5hbWUgaXMgdXNlZCB0byBhdXRvIGdlbmVyYXRlZCB1bmlxdWUgcHJlZml4XG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqXG4gICAqL1xuICB1bmlxdWU/OiBBdHRyaWJ1dGVPcHRpb25zVW5pcXVlVHlwZTxFbnRpdHk+O1xuICAvKipcbiAgICogTWFyayBwcm9wZXJ0eSBhcyBlbnVtXG4gICAqIEByZXF1aXJlZCB3aGVuIHByb3BlcnR5IG9mIHR5cGUgZW51bSBpcyByZWZlcmVuY2VkIGluIGtleVxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgaXNFbnVtPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIEFzc2lnbiBkZWZhdWx0IHZhbHVlIHRvIGF0dHJpYnV0ZVxuICAgKi9cbiAgZGVmYXVsdD86IFNjYWxhclR5cGUgfCAoKGVudGl0eTogRW50aXR5KSA9PiBTY2FsYXJUeXBlKTtcbiAgLyoqXG4gICAqIERlZmluZXMgd2hldGhlciB0aGUgYXR0cmlidXRlIHNob3VsZCBiZSBoaWRkZW4gZnJvbSByZXNwb25zZSByZXR1cm5lZCB0byBjbGllbnRcbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGhpZGRlbj86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBBdHRyaWJ1dGU8RW50aXR5ID0gYW55PihcbiAgb3B0aW9ucz86IEF0dHJpYnV0ZU9wdGlvbnM8RW50aXR5PlxuKTogUHJvcGVydHlEZWNvcmF0b3Ige1xuICByZXR1cm4gKHRhcmdldCwgcHJvcGVydHlLZXkpOiB2b2lkID0+IHtcbiAgICBjb25zdCByZWZsZWN0ZWRNZXRhZGF0YSA9IFJlZmxlY3QuZ2V0TWV0YWRhdGEoXG4gICAgICAnZGVzaWduOnR5cGUnLFxuICAgICAgdGFyZ2V0LFxuICAgICAgcHJvcGVydHlLZXlcbiAgICApO1xuXG4gICAgaWYgKCFyZWZsZWN0ZWRNZXRhZGF0YSkge1xuICAgICAgdGhyb3cgbmV3IE1pc3NpbmdSZWZsZWN0TWV0YWRhdGFFcnJvcignZGVzaWduOnR5cGUnKTtcbiAgICB9XG5cbiAgICBsZXQgdHlwZSA9IHJlZmxlY3RlZE1ldGFkYXRhLm5hbWU7XG5cbiAgICBpZiAob3B0aW9ucz8uaXNFbnVtKSB7XG4gICAgICAvLyBkZWZhdWx0IHRvIFwiU3RyaW5nXCIgd2hlbiBhdHRyaWJ1dGUgaXMgbWFya2VkIGFzIGVudW1cbiAgICAgIHR5cGUgPSAnU3RyaW5nJztcbiAgICB9XG5cbiAgICBjb25zdCBhdHRyaWJ1dGVQcm9wcyA9IHtcbiAgICAgIG5hbWU6IHByb3BlcnR5S2V5LnRvU3RyaW5nKCksXG4gICAgICB0eXBlLFxuICAgICAgdW5pcXVlOiBvcHRpb25zPy51bmlxdWUsXG4gICAgICBkZWZhdWx0OiBvcHRpb25zPy5kZWZhdWx0LFxuICAgICAgaGlkZGVuOiBvcHRpb25zPy5oaWRkZW4sXG4gICAgfSBhcyBBdHRyaWJ1dGVSYXdNZXRhZGF0YU9wdGlvbnM7XG5cbiAgICBNZXRhZGF0YU1hbmFnZXIubWV0YWRhdGFTdG9yYWdlLmFkZFJhd0F0dHJpYnV0ZShcbiAgICAgIHRhcmdldC5jb25zdHJ1Y3RvcixcbiAgICAgIGF0dHJpYnV0ZVByb3BzXG4gICAgKTtcbiAgfTtcbn1cbiJdfQ==