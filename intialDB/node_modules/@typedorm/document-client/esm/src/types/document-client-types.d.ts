import AWS, { DynamoDB } from 'aws-sdk';
import DynamoDBClientV3 from '@aws-sdk/client-dynamodb';
export declare namespace DocumentClientTypes {
    /**
     * General
     */
    type Key = {
        [key: string]: any;
    };
    type AttributeMap = {
        [key: string]: any;
    };
    type ItemList = AttributeMap[];
    type WriteRequest = DynamoDB.DocumentClient.WriteRequest | DynamoDBClientV3.WriteRequest;
    type Request<T> = AWS.Request<T, AWS.AWSError>;
    type ItemResponse = AWS.DynamoDB.DocumentClient.ItemResponse | DynamoDBClientV3.ItemResponse;
    type ItemResponseList = ItemResponse[];
    /**
     * Put
     */
    type PutItemInput = DynamoDB.DocumentClient.PutItemInput | DynamoDBClientV3.PutItemInput;
    type PutItemOutput = DynamoDB.DocumentClient.PutItemOutput | DynamoDBClientV3.PutItemOutput;
    /**
     * Get
     */
    type GetItemInput = DynamoDB.DocumentClient.GetItemInput | DynamoDBClientV3.GetItemInput;
    type GetItemOutput = DynamoDB.DocumentClient.GetItemOutput | DynamoDBClientV3.GetItemOutput;
    /**
     * Update
     */
    type Update = DynamoDB.DocumentClient.Update | DynamoDBClientV3.Update;
    type UpdateItemInput = DynamoDB.DocumentClient.UpdateItemInput | DynamoDBClientV3.UpdateItemInput;
    type UpdateItemOutput = DynamoDB.DocumentClient.UpdateItemOutput | DynamoDBClientV3.UpdateItemOutput;
    /**
     * Delete
     */
    type DeleteItemInput = DynamoDB.DocumentClient.DeleteItemInput | DynamoDBClientV3.DeleteItemInput;
    type DeleteItemOutput = DynamoDB.DocumentClient.DeleteItemOutput | DynamoDBClientV3.DeleteItemOutput;
    /**
     * Query
     */
    type QueryInput = DynamoDB.DocumentClient.QueryInput | DynamoDBClientV3.QueryInput;
    type QueryOutput = DynamoDB.DocumentClient.QueryOutput | DynamoDBClientV3.QueryOutput;
    /**
     * BatchWrite
     */
    type BatchWriteItemRequestMap = DynamoDB.DocumentClient.BatchWriteItemRequestMap | {
        [key: string]: DynamoDBClientV3.WriteRequest[];
    };
    type BatchWriteItemRequestMapList = BatchWriteItemRequestMap[];
    type BatchWriteItemInput = DynamoDB.DocumentClient.BatchWriteItemInput | DynamoDBClientV3.BatchWriteItemInput;
    type BatchWriteItemOutput = DynamoDB.DocumentClient.BatchWriteItemOutput | DynamoDBClientV3.BatchWriteItemOutput;
    type BatchWriteItemOutputList = BatchWriteItemOutput[];
    /**
     * BatchGet
     */
    type BatchGetRequestMap = DynamoDB.DocumentClient.BatchGetRequestMap | {
        [key: string]: DynamoDBClientV3.KeysAndAttributes;
    };
    type BatchGetRequestMapList = BatchGetRequestMap[];
    type BatchGetItemInput = DynamoDB.DocumentClient.BatchGetItemInput | DynamoDBClientV3.BatchGetItemInput;
    type BatchGetItemOutput = DynamoDB.DocumentClient.BatchGetItemOutput | DynamoDBClientV3.BatchGetItemOutput;
    type BatchGetItemOutputList = BatchGetItemOutput[];
    type BatchGetResponseMap = DynamoDB.DocumentClient.BatchGetResponseMap | {
        [key: string]: ItemList;
    };
    /**
     * TransactWrite
     */
    type TransactWriteItem = DynamoDB.DocumentClient.TransactWriteItem | DynamoDBClientV3.TransactWriteItem;
    type TransactWriteItemList = TransactWriteItem[];
    type TransactWriteItemInput = DynamoDB.DocumentClient.TransactWriteItemsInput | DynamoDBClientV3.TransactWriteItemsInput;
    type TransactWriteItemOutput = DynamoDB.DocumentClient.TransactWriteItemsOutput | DynamoDBClientV3.TransactWriteItemsOutput;
    /**
     * TransactGet
     */
    type TransactGetItem = DynamoDB.DocumentClient.TransactGetItem | DynamoDBClientV3.TransactGetItem;
    type TransactGetItemList = TransactGetItem[];
    type TransactGetItemInput = DynamoDB.DocumentClient.TransactGetItemsInput | DynamoDBClientV3.TransactGetItemsInput;
    type TransactGetItemOutput = DynamoDB.DocumentClient.TransactGetItemsOutput | DynamoDBClientV3.TransactGetItemsOutput;
    /**
     * Scan
     */
    type ScanInput = DynamoDB.DocumentClient.ScanInput | DynamoDBClientV3.ScanInput;
    type ScanOutput = DynamoDB.DocumentClient.ScanOutput | DynamoDBClientV3.ScanOutput;
}
