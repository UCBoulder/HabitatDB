import { BatchGetItemInput, BatchGetItemOutput, BatchWriteItemInput, BatchWriteItemOutput, DeleteItemInput, DeleteItemOutput, DynamoDBClient, GetItemInput, GetItemOutput, PutItemInput, PutItemOutput, QueryInput, QueryOutput, ScanInput, ScanOutput, TransactGetItemsInput, TransactGetItemsOutput, TransactWriteItemsInput, TransactWriteItemsOutput, UpdateItemInput, UpdateItemOutput } from '@aws-sdk/client-dynamodb';
import { DynamoDBDocumentClient } from '@aws-sdk/lib-dynamodb';
import { DocumentClient } from './base-document-client';
export declare class DocumentClientV3<DynamoDBDocumentClientType extends DynamoDBDocumentClient = DynamoDBDocumentClient> extends DocumentClient {
    readonly documentClient: DynamoDBDocumentClientType;
    readonly version = 3;
    constructor(dynamoDBClient: DynamoDBClient);
    put(input: PutItemInput): Promise<PutItemOutput>;
    get(input: GetItemInput): Promise<GetItemOutput>;
    query(input: QueryInput): Promise<QueryOutput>;
    update(input: UpdateItemInput): Promise<UpdateItemOutput>;
    delete(input: DeleteItemInput): Promise<DeleteItemOutput>;
    batchWrite(input: BatchWriteItemInput): Promise<BatchWriteItemOutput>;
    batchGet(input: BatchGetItemInput): Promise<BatchGetItemOutput>;
    transactGet(input: TransactGetItemsInput): Promise<TransactGetItemsOutput>;
    transactWrite(input: TransactWriteItemsInput): Promise<TransactWriteItemsOutput>;
    scan(input: ScanInput): Promise<ScanOutput>;
}
