import { applyMixins } from '../../helpers/apply-mixins';
import { ExpressionBuilder } from '../expression/expression-builder';
import { ExpressionInputParser } from '../expression/expression-input-parser';
import { BaseTransformer } from './base-transformer';
import { DocumentClientRequestTransformer } from './document-client-request-transformer';
import { EntityTransformer } from './entity-transformer';
export class LowOrderTransformers {
    connection;
    constructor(connection) {
        this.connection = connection;
        /**
         * running mixins over extended classes does not roll over expressions
         */
        this._expressionBuilder = new ExpressionBuilder();
        this._expressionInputParser = new ExpressionInputParser();
    }
}
// dynamically extend both low order transformers
applyMixins(LowOrderTransformers, [
    BaseTransformer,
    EntityTransformer,
    DocumentClientRequestTransformer,
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG93LW9yZGVyLXRyYW5zZm9ybWVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2NsYXNzZXMvdHJhbnNmb3JtZXIvbG93LW9yZGVyLXRyYW5zZm9ybWVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFFdkQsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sa0NBQWtDLENBQUM7QUFDbkUsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ25ELE9BQU8sRUFBQyxnQ0FBZ0MsRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBQ3ZGLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBTXZELE1BQU0sT0FBTyxvQkFBb0I7SUFDWjtJQUFuQixZQUFtQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3ZDOztXQUVHO1FBQ0gsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksaUJBQWlCLEVBQUUsQ0FBQztRQUNsRCxJQUFJLENBQUMsc0JBQXNCLEdBQUcsSUFBSSxxQkFBcUIsRUFBRSxDQUFDO0lBQzVELENBQUM7Q0FDRjtBQUVELGlEQUFpRDtBQUNqRCxXQUFXLENBQUMsb0JBQW9CLEVBQUU7SUFDaEMsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixnQ0FBZ0M7Q0FDakMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHthcHBseU1peGluc30gZnJvbSAnLi4vLi4vaGVscGVycy9hcHBseS1taXhpbnMnO1xuaW1wb3J0IHtDb25uZWN0aW9ufSBmcm9tICcuLi9jb25uZWN0aW9uL2Nvbm5lY3Rpb24nO1xuaW1wb3J0IHtFeHByZXNzaW9uQnVpbGRlcn0gZnJvbSAnLi4vZXhwcmVzc2lvbi9leHByZXNzaW9uLWJ1aWxkZXInO1xuaW1wb3J0IHtFeHByZXNzaW9uSW5wdXRQYXJzZXJ9IGZyb20gJy4uL2V4cHJlc3Npb24vZXhwcmVzc2lvbi1pbnB1dC1wYXJzZXInO1xuaW1wb3J0IHtCYXNlVHJhbnNmb3JtZXJ9IGZyb20gJy4vYmFzZS10cmFuc2Zvcm1lcic7XG5pbXBvcnQge0RvY3VtZW50Q2xpZW50UmVxdWVzdFRyYW5zZm9ybWVyfSBmcm9tICcuL2RvY3VtZW50LWNsaWVudC1yZXF1ZXN0LXRyYW5zZm9ybWVyJztcbmltcG9ydCB7RW50aXR5VHJhbnNmb3JtZXJ9IGZyb20gJy4vZW50aXR5LXRyYW5zZm9ybWVyJztcblxuZXhwb3J0IGludGVyZmFjZSBMb3dPcmRlclRyYW5zZm9ybWVyc1xuICBleHRlbmRzIERvY3VtZW50Q2xpZW50UmVxdWVzdFRyYW5zZm9ybWVyLFxuICAgIEVudGl0eVRyYW5zZm9ybWVyIHt9XG5cbmV4cG9ydCBjbGFzcyBMb3dPcmRlclRyYW5zZm9ybWVycyB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjb25uZWN0aW9uOiBDb25uZWN0aW9uKSB7XG4gICAgLyoqXG4gICAgICogcnVubmluZyBtaXhpbnMgb3ZlciBleHRlbmRlZCBjbGFzc2VzIGRvZXMgbm90IHJvbGwgb3ZlciBleHByZXNzaW9uc1xuICAgICAqL1xuICAgIHRoaXMuX2V4cHJlc3Npb25CdWlsZGVyID0gbmV3IEV4cHJlc3Npb25CdWlsZGVyKCk7XG4gICAgdGhpcy5fZXhwcmVzc2lvbklucHV0UGFyc2VyID0gbmV3IEV4cHJlc3Npb25JbnB1dFBhcnNlcigpO1xuICB9XG59XG5cbi8vIGR5bmFtaWNhbGx5IGV4dGVuZCBib3RoIGxvdyBvcmRlciB0cmFuc2Zvcm1lcnNcbmFwcGx5TWl4aW5zKExvd09yZGVyVHJhbnNmb3JtZXJzLCBbXG4gIEJhc2VUcmFuc2Zvcm1lcixcbiAgRW50aXR5VHJhbnNmb3JtZXIsXG4gIERvY3VtZW50Q2xpZW50UmVxdWVzdFRyYW5zZm9ybWVyLFxuXSk7XG4iXX0=