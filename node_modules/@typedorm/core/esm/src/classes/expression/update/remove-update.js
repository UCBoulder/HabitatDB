import { Update } from './update';
export class RemoveUpdate extends Update {
    prefix = 'REMOVE';
    remove(attrOrPath, options) {
        if (options && Array.isArray(options.atIndexes)) {
            let fullExp = '';
            // create a string out of all index numbers
            const attrExp = this.addExpressionName(attrOrPath);
            options.atIndexes.forEach((index) => {
                if (typeof index !== 'number') {
                    throw new Error(`Invalid value for $AT_INDEX: ${index}, Index value must be of type number.`);
                }
                const segExp = `${attrExp}[${index}]`;
                fullExp += fullExp ? `, ${segExp}` : segExp;
            });
            this.appendToExpression(fullExp);
            return this;
        }
        else {
            const attrExpName = this.addExpressionName(attrOrPath);
            this.appendToExpression(attrExpName);
            return this;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3ZlLXVwZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2NsYXNzZXMvZXhwcmVzc2lvbi91cGRhdGUvcmVtb3ZlLXVwZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBRWhDLE1BQU0sT0FBTyxZQUFhLFNBQVEsTUFBTTtJQUM1QixNQUFNLEdBQXNCLFFBQVEsQ0FBQztJQUUvQyxNQUFNLENBQ0osVUFBa0IsRUFDbEIsT0FFQztRQUVELElBQUksT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUFFO1lBQy9DLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztZQUVqQiwyQ0FBMkM7WUFDM0MsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ25ELE9BQU8sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBYSxFQUFFLEVBQUU7Z0JBQzFDLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO29CQUM3QixNQUFNLElBQUksS0FBSyxDQUNiLGdDQUFnQyxLQUFLLHVDQUF1QyxDQUM3RSxDQUFDO2lCQUNIO2dCQUNELE1BQU0sTUFBTSxHQUFHLEdBQUcsT0FBTyxJQUFJLEtBQUssR0FBRyxDQUFDO2dCQUN0QyxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7WUFDOUMsQ0FBQyxDQUFDLENBQUM7WUFFSCxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDakMsT0FBTyxJQUFJLENBQUM7U0FDYjthQUFNO1lBQ0wsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNyQyxPQUFPLElBQUksQ0FBQztTQUNiO0lBQ0gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtVcGRhdGVUeXBlfSBmcm9tICdAdHlwZWRvcm0vY29tbW9uJztcbmltcG9ydCB7VXBkYXRlfSBmcm9tICcuL3VwZGF0ZSc7XG5cbmV4cG9ydCBjbGFzcyBSZW1vdmVVcGRhdGUgZXh0ZW5kcyBVcGRhdGUge1xuICBwcm90ZWN0ZWQgcHJlZml4OiBVcGRhdGVUeXBlLkFjdGlvbiA9ICdSRU1PVkUnO1xuXG4gIHJlbW92ZShcbiAgICBhdHRyT3JQYXRoOiBzdHJpbmcsXG4gICAgb3B0aW9ucz86IHtcbiAgICAgIGF0SW5kZXhlcz86IG51bWJlcltdO1xuICAgIH1cbiAgKSB7XG4gICAgaWYgKG9wdGlvbnMgJiYgQXJyYXkuaXNBcnJheShvcHRpb25zLmF0SW5kZXhlcykpIHtcbiAgICAgIGxldCBmdWxsRXhwID0gJyc7XG5cbiAgICAgIC8vIGNyZWF0ZSBhIHN0cmluZyBvdXQgb2YgYWxsIGluZGV4IG51bWJlcnNcbiAgICAgIGNvbnN0IGF0dHJFeHAgPSB0aGlzLmFkZEV4cHJlc3Npb25OYW1lKGF0dHJPclBhdGgpO1xuICAgICAgb3B0aW9ucy5hdEluZGV4ZXMuZm9yRWFjaCgoaW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIGluZGV4ICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgIGBJbnZhbGlkIHZhbHVlIGZvciAkQVRfSU5ERVg6ICR7aW5kZXh9LCBJbmRleCB2YWx1ZSBtdXN0IGJlIG9mIHR5cGUgbnVtYmVyLmBcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNlZ0V4cCA9IGAke2F0dHJFeHB9WyR7aW5kZXh9XWA7XG4gICAgICAgIGZ1bGxFeHAgKz0gZnVsbEV4cCA/IGAsICR7c2VnRXhwfWAgOiBzZWdFeHA7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5hcHBlbmRUb0V4cHJlc3Npb24oZnVsbEV4cCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgYXR0ckV4cE5hbWUgPSB0aGlzLmFkZEV4cHJlc3Npb25OYW1lKGF0dHJPclBhdGgpO1xuICAgICAgdGhpcy5hcHBlbmRUb0V4cHJlc3Npb24oYXR0ckV4cE5hbWUpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9XG59XG4iXX0=