import { IsCompositePrimaryKey } from '@typedorm/common';
import { getInterpolatedKeys } from './get-interpolated-keys';
const IsRawPrimaryKey = (key) => {
    return !!key.partitionKey;
};
export function isUsedForPrimaryKey(primaryKey, attributeName) {
    let primaryKeyInterpolations = [];
    // if raw primary key was provided, resolve all the interpolations for it
    if (IsRawPrimaryKey(primaryKey)) {
        primaryKeyInterpolations = [
            ...primaryKeyInterpolations,
            ...getInterpolatedKeys(primaryKey.partitionKey),
        ];
        if (IsCompositePrimaryKey(primaryKey)) {
            primaryKeyInterpolations = [
                ...primaryKeyInterpolations,
                ...getInterpolatedKeys(primaryKey.sortKey),
            ];
        }
        // when parsed primary key is provided, flatten all interpolations to an array
    }
    else {
        const interpolationsToFlatten = primaryKey.metadata._interpolations ?? {};
        primaryKeyInterpolations = [
            ...primaryKeyInterpolations,
            ...Object.keys(interpolationsToFlatten).flatMap(key => {
                const currInterpolation = interpolationsToFlatten[key];
                return currInterpolation;
            }),
        ];
    }
    // check if there is a matching attribute name
    return primaryKeyInterpolations.includes(attributeName);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtdXNlZC1mb3ItcHJpbWFyeS1rZXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9oZWxwZXJzL2lzLXVzZWQtZm9yLXByaW1hcnkta2V5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxxQkFBcUIsRUFBYSxNQUFNLGtCQUFrQixDQUFDO0FBRW5FLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBRTVELE1BQU0sZUFBZSxHQUFHLENBQUMsR0FBWSxFQUFxQixFQUFFO0lBQzFELE9BQU8sQ0FBQyxDQUFFLEdBQWtCLENBQUMsWUFBWSxDQUFDO0FBQzVDLENBQUMsQ0FBQztBQUVGLE1BQU0sVUFBVSxtQkFBbUIsQ0FDakMsVUFBcUQsRUFDckQsYUFBcUI7SUFFckIsSUFBSSx3QkFBd0IsR0FBRyxFQUFjLENBQUM7SUFFOUMseUVBQXlFO0lBQ3pFLElBQUksZUFBZSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1FBQy9CLHdCQUF3QixHQUFHO1lBQ3pCLEdBQUcsd0JBQXdCO1lBQzNCLEdBQUcsbUJBQW1CLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQztTQUNoRCxDQUFDO1FBRUYsSUFBSSxxQkFBcUIsQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUNyQyx3QkFBd0IsR0FBRztnQkFDekIsR0FBRyx3QkFBd0I7Z0JBQzNCLEdBQUcsbUJBQW1CLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQzthQUMzQyxDQUFDO1NBQ0g7UUFDRCw4RUFBOEU7S0FDL0U7U0FBTTtRQUNMLE1BQU0sdUJBQXVCLEdBQUcsVUFBVSxDQUFDLFFBQVEsQ0FBQyxlQUFlLElBQUksRUFBRSxDQUFDO1FBQzFFLHdCQUF3QixHQUFHO1lBQ3pCLEdBQUcsd0JBQXdCO1lBQzNCLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDcEQsTUFBTSxpQkFBaUIsR0FBRyx1QkFBdUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDdkQsT0FBTyxpQkFBaUIsQ0FBQztZQUMzQixDQUFDLENBQUM7U0FDSCxDQUFDO0tBQ0g7SUFFRCw4Q0FBOEM7SUFDOUMsT0FBTyx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDMUQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SXNDb21wb3NpdGVQcmltYXJ5S2V5LCBQcmltYXJ5S2V5fSBmcm9tICdAdHlwZWRvcm0vY29tbW9uJztcbmltcG9ydCB7RHluYW1vRW50aXR5U2NoZW1hUHJpbWFyeUtleX0gZnJvbSAnLi4vY2xhc3Nlcy9tZXRhZGF0YS9lbnRpdHktbWV0YWRhdGEnO1xuaW1wb3J0IHtnZXRJbnRlcnBvbGF0ZWRLZXlzfSBmcm9tICcuL2dldC1pbnRlcnBvbGF0ZWQta2V5cyc7XG5cbmNvbnN0IElzUmF3UHJpbWFyeUtleSA9IChrZXk6IHVua25vd24pOiBrZXkgaXMgUHJpbWFyeUtleSA9PiB7XG4gIHJldHVybiAhIShrZXkgYXMgUHJpbWFyeUtleSkucGFydGl0aW9uS2V5O1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGlzVXNlZEZvclByaW1hcnlLZXkoXG4gIHByaW1hcnlLZXk6IER5bmFtb0VudGl0eVNjaGVtYVByaW1hcnlLZXkgfCBQcmltYXJ5S2V5LFxuICBhdHRyaWJ1dGVOYW1lOiBzdHJpbmdcbikge1xuICBsZXQgcHJpbWFyeUtleUludGVycG9sYXRpb25zID0gW10gYXMgc3RyaW5nW107XG5cbiAgLy8gaWYgcmF3IHByaW1hcnkga2V5IHdhcyBwcm92aWRlZCwgcmVzb2x2ZSBhbGwgdGhlIGludGVycG9sYXRpb25zIGZvciBpdFxuICBpZiAoSXNSYXdQcmltYXJ5S2V5KHByaW1hcnlLZXkpKSB7XG4gICAgcHJpbWFyeUtleUludGVycG9sYXRpb25zID0gW1xuICAgICAgLi4ucHJpbWFyeUtleUludGVycG9sYXRpb25zLFxuICAgICAgLi4uZ2V0SW50ZXJwb2xhdGVkS2V5cyhwcmltYXJ5S2V5LnBhcnRpdGlvbktleSksXG4gICAgXTtcblxuICAgIGlmIChJc0NvbXBvc2l0ZVByaW1hcnlLZXkocHJpbWFyeUtleSkpIHtcbiAgICAgIHByaW1hcnlLZXlJbnRlcnBvbGF0aW9ucyA9IFtcbiAgICAgICAgLi4ucHJpbWFyeUtleUludGVycG9sYXRpb25zLFxuICAgICAgICAuLi5nZXRJbnRlcnBvbGF0ZWRLZXlzKHByaW1hcnlLZXkuc29ydEtleSksXG4gICAgICBdO1xuICAgIH1cbiAgICAvLyB3aGVuIHBhcnNlZCBwcmltYXJ5IGtleSBpcyBwcm92aWRlZCwgZmxhdHRlbiBhbGwgaW50ZXJwb2xhdGlvbnMgdG8gYW4gYXJyYXlcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBpbnRlcnBvbGF0aW9uc1RvRmxhdHRlbiA9IHByaW1hcnlLZXkubWV0YWRhdGEuX2ludGVycG9sYXRpb25zID8/IHt9O1xuICAgIHByaW1hcnlLZXlJbnRlcnBvbGF0aW9ucyA9IFtcbiAgICAgIC4uLnByaW1hcnlLZXlJbnRlcnBvbGF0aW9ucyxcbiAgICAgIC4uLk9iamVjdC5rZXlzKGludGVycG9sYXRpb25zVG9GbGF0dGVuKS5mbGF0TWFwKGtleSA9PiB7XG4gICAgICAgIGNvbnN0IGN1cnJJbnRlcnBvbGF0aW9uID0gaW50ZXJwb2xhdGlvbnNUb0ZsYXR0ZW5ba2V5XTtcbiAgICAgICAgcmV0dXJuIGN1cnJJbnRlcnBvbGF0aW9uO1xuICAgICAgfSksXG4gICAgXTtcbiAgfVxuXG4gIC8vIGNoZWNrIGlmIHRoZXJlIGlzIGEgbWF0Y2hpbmcgYXR0cmlidXRlIG5hbWVcbiAgcmV0dXJuIHByaW1hcnlLZXlJbnRlcnBvbGF0aW9ucy5pbmNsdWRlcyhhdHRyaWJ1dGVOYW1lKTtcbn1cbiJdfQ==