"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoveUpdate = void 0;
const update_1 = require("./update");
class RemoveUpdate extends update_1.Update {
    constructor() {
        super(...arguments);
        this.prefix = 'REMOVE';
    }
    remove(attrOrPath, options) {
        if (options && Array.isArray(options.atIndexes)) {
            let fullExp = '';
            // create a string out of all index numbers
            const attrExp = this.addExpressionName(attrOrPath);
            options.atIndexes.forEach((index) => {
                if (typeof index !== 'number') {
                    throw new Error(`Invalid value for $AT_INDEX: ${index}, Index value must be of type number.`);
                }
                const segExp = `${attrExp}[${index}]`;
                fullExp += fullExp ? `, ${segExp}` : segExp;
            });
            this.appendToExpression(fullExp);
            return this;
        }
        else {
            const attrExpName = this.addExpressionName(attrOrPath);
            this.appendToExpression(attrExpName);
            return this;
        }
    }
}
exports.RemoveUpdate = RemoveUpdate;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3ZlLXVwZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2NsYXNzZXMvZXhwcmVzc2lvbi91cGRhdGUvcmVtb3ZlLXVwZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxxQ0FBZ0M7QUFFaEMsTUFBYSxZQUFhLFNBQVEsZUFBTTtJQUF4Qzs7UUFDWSxXQUFNLEdBQXNCLFFBQVEsQ0FBQztJQStCakQsQ0FBQztJQTdCQyxNQUFNLENBQ0osVUFBa0IsRUFDbEIsT0FFQztRQUVELElBQUksT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUFFO1lBQy9DLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztZQUVqQiwyQ0FBMkM7WUFDM0MsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ25ELE9BQU8sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBYSxFQUFFLEVBQUU7Z0JBQzFDLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO29CQUM3QixNQUFNLElBQUksS0FBSyxDQUNiLGdDQUFnQyxLQUFLLHVDQUF1QyxDQUM3RSxDQUFDO2lCQUNIO2dCQUNELE1BQU0sTUFBTSxHQUFHLEdBQUcsT0FBTyxJQUFJLEtBQUssR0FBRyxDQUFDO2dCQUN0QyxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7WUFDOUMsQ0FBQyxDQUFDLENBQUM7WUFFSCxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDakMsT0FBTyxJQUFJLENBQUM7U0FDYjthQUFNO1lBQ0wsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNyQyxPQUFPLElBQUksQ0FBQztTQUNiO0lBQ0gsQ0FBQztDQUNGO0FBaENELG9DQWdDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VXBkYXRlVHlwZX0gZnJvbSAnQHR5cGVkb3JtL2NvbW1vbic7XG5pbXBvcnQge1VwZGF0ZX0gZnJvbSAnLi91cGRhdGUnO1xuXG5leHBvcnQgY2xhc3MgUmVtb3ZlVXBkYXRlIGV4dGVuZHMgVXBkYXRlIHtcbiAgcHJvdGVjdGVkIHByZWZpeDogVXBkYXRlVHlwZS5BY3Rpb24gPSAnUkVNT1ZFJztcblxuICByZW1vdmUoXG4gICAgYXR0ck9yUGF0aDogc3RyaW5nLFxuICAgIG9wdGlvbnM/OiB7XG4gICAgICBhdEluZGV4ZXM/OiBudW1iZXJbXTtcbiAgICB9XG4gICkge1xuICAgIGlmIChvcHRpb25zICYmIEFycmF5LmlzQXJyYXkob3B0aW9ucy5hdEluZGV4ZXMpKSB7XG4gICAgICBsZXQgZnVsbEV4cCA9ICcnO1xuXG4gICAgICAvLyBjcmVhdGUgYSBzdHJpbmcgb3V0IG9mIGFsbCBpbmRleCBudW1iZXJzXG4gICAgICBjb25zdCBhdHRyRXhwID0gdGhpcy5hZGRFeHByZXNzaW9uTmFtZShhdHRyT3JQYXRoKTtcbiAgICAgIG9wdGlvbnMuYXRJbmRleGVzLmZvckVhY2goKGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiBpbmRleCAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBgSW52YWxpZCB2YWx1ZSBmb3IgJEFUX0lOREVYOiAke2luZGV4fSwgSW5kZXggdmFsdWUgbXVzdCBiZSBvZiB0eXBlIG51bWJlci5gXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzZWdFeHAgPSBgJHthdHRyRXhwfVske2luZGV4fV1gO1xuICAgICAgICBmdWxsRXhwICs9IGZ1bGxFeHAgPyBgLCAke3NlZ0V4cH1gIDogc2VnRXhwO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuYXBwZW5kVG9FeHByZXNzaW9uKGZ1bGxFeHApO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGF0dHJFeHBOYW1lID0gdGhpcy5hZGRFeHByZXNzaW9uTmFtZShhdHRyT3JQYXRoKTtcbiAgICAgIHRoaXMuYXBwZW5kVG9FeHByZXNzaW9uKGF0dHJFeHBOYW1lKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfVxufVxuIl19