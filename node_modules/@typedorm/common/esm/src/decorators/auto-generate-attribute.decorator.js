import { MetadataManager } from '../metadata/metadata-manager';
import { MissingReflectMetadataError } from '../error';
export function AutoGenerateAttribute(options) {
    return (target, propertyKey) => {
        const reflectedMetadata = Reflect.getMetadata('design:type', target, propertyKey);
        if (!reflectedMetadata) {
            throw new MissingReflectMetadataError('design:type');
        }
        const attributeProps = {
            name: propertyKey.toString(),
            type: reflectedMetadata.name,
            strategy: options.strategy,
            autoUpdate: options.autoUpdate,
            hidden: options.hidden,
        };
        if (options.strategy)
            MetadataManager.metadataStorage.addRawAttribute(target.constructor, attributeProps);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1nZW5lcmF0ZS1hdHRyaWJ1dGUuZGVjb3JhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29tbW9uL3NyYy9kZWNvcmF0b3JzL2F1dG8tZ2VuZXJhdGUtYXR0cmlidXRlLmRlY29yYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sOEJBQThCLENBQUM7QUFFN0QsT0FBTyxFQUFDLDJCQUEyQixFQUFDLE1BQU0sVUFBVSxDQUFDO0FBc0JyRCxNQUFNLFVBQVUscUJBQXFCLENBQ25DLE9BQXNDO0lBRXRDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLEVBQUU7UUFDN0IsTUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUMzQyxhQUFhLEVBQ2IsTUFBTSxFQUNOLFdBQVcsQ0FDWixDQUFDO1FBRUYsSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQ3RCLE1BQU0sSUFBSSwyQkFBMkIsQ0FBQyxhQUFhLENBQUMsQ0FBQztTQUN0RDtRQUVELE1BQU0sY0FBYyxHQUE0QztZQUM5RCxJQUFJLEVBQUUsV0FBVyxDQUFDLFFBQVEsRUFBRTtZQUM1QixJQUFJLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtZQUM1QixRQUFRLEVBQUUsT0FBTyxDQUFDLFFBQVE7WUFDMUIsVUFBVSxFQUFFLE9BQU8sQ0FBQyxVQUFVO1lBQzlCLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTTtTQUN2QixDQUFDO1FBRUYsSUFBSSxPQUFPLENBQUMsUUFBUTtZQUNsQixlQUFlLENBQUMsZUFBZSxDQUFDLGVBQWUsQ0FDN0MsTUFBTSxDQUFDLFdBQVcsRUFDbEIsY0FBYyxDQUNmLENBQUM7SUFDTixDQUFDLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBVVRPX0dFTkVSQVRFX0FUVFJJQlVURV9TVFJBVEVHWX0gZnJvbSAnLi4vZW51bXMnO1xuaW1wb3J0IHtNZXRhZGF0YU1hbmFnZXJ9IGZyb20gJy4uL21ldGFkYXRhL21ldGFkYXRhLW1hbmFnZXInO1xuaW1wb3J0IHtBdXRvR2VuZXJhdGVBdHRyaWJ1dGVSYXdNZXRhZGF0YU9wdGlvbnN9IGZyb20gJy4uL21ldGFkYXRhL21ldGFkYXRhLXN0b3JhZ2UnO1xuaW1wb3J0IHtNaXNzaW5nUmVmbGVjdE1ldGFkYXRhRXJyb3J9IGZyb20gJy4uL2Vycm9yJztcblxuZXhwb3J0IGludGVyZmFjZSBBdXRvR2VuZXJhdGVkQXR0cmlidXRlT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBBdXRvIGdlbmVyYXRlIHN0cmF0ZWd5IHRvIHVzZVxuICAgKi9cbiAgc3RyYXRlZ3k6IEFVVE9fR0VORVJBVEVfQVRUUklCVVRFX1NUUkFURUdZO1xuXG4gIC8qKlxuICAgKiBEZWZpbmVzIHdoZXRoZXIgdGhlIGF0dHJpYnV0ZSB2YWx1ZXMgc2hvdWxkIGJlIGF1dG8gdXBkYXRlZCB3aGVuIGFueSB3cml0ZSBvcGVyYXRpb24gb2NjdXJzXG4gICAqIGhhcHBlbnMgKGkuZSB1cGRhdGVkQXQgb24gZW50aXRpZXMpXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBhdXRvVXBkYXRlPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogRGVmaW5lcyB3aGV0aGVyIHRoZSBhdHRyaWJ1dGUgc2hvdWxkIGJlIGhpZGRlbiBmcm9tIHJlc3BvbnNlIHJldHVybmVkIHRvIGNsaWVudFxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgaGlkZGVuPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEF1dG9HZW5lcmF0ZUF0dHJpYnV0ZShcbiAgb3B0aW9uczogQXV0b0dlbmVyYXRlZEF0dHJpYnV0ZU9wdGlvbnNcbik6IFByb3BlcnR5RGVjb3JhdG9yIHtcbiAgcmV0dXJuICh0YXJnZXQsIHByb3BlcnR5S2V5KSA9PiB7XG4gICAgY29uc3QgcmVmbGVjdGVkTWV0YWRhdGEgPSBSZWZsZWN0LmdldE1ldGFkYXRhKFxuICAgICAgJ2Rlc2lnbjp0eXBlJyxcbiAgICAgIHRhcmdldCxcbiAgICAgIHByb3BlcnR5S2V5XG4gICAgKTtcblxuICAgIGlmICghcmVmbGVjdGVkTWV0YWRhdGEpIHtcbiAgICAgIHRocm93IG5ldyBNaXNzaW5nUmVmbGVjdE1ldGFkYXRhRXJyb3IoJ2Rlc2lnbjp0eXBlJyk7XG4gICAgfVxuXG4gICAgY29uc3QgYXR0cmlidXRlUHJvcHM6IEF1dG9HZW5lcmF0ZUF0dHJpYnV0ZVJhd01ldGFkYXRhT3B0aW9ucyA9IHtcbiAgICAgIG5hbWU6IHByb3BlcnR5S2V5LnRvU3RyaW5nKCksXG4gICAgICB0eXBlOiByZWZsZWN0ZWRNZXRhZGF0YS5uYW1lLFxuICAgICAgc3RyYXRlZ3k6IG9wdGlvbnMuc3RyYXRlZ3ksXG4gICAgICBhdXRvVXBkYXRlOiBvcHRpb25zLmF1dG9VcGRhdGUsXG4gICAgICBoaWRkZW46IG9wdGlvbnMuaGlkZGVuLFxuICAgIH07XG5cbiAgICBpZiAob3B0aW9ucy5zdHJhdGVneSlcbiAgICAgIE1ldGFkYXRhTWFuYWdlci5tZXRhZGF0YVN0b3JhZ2UuYWRkUmF3QXR0cmlidXRlKFxuICAgICAgICB0YXJnZXQuY29uc3RydWN0b3IsXG4gICAgICAgIGF0dHJpYnV0ZVByb3BzXG4gICAgICApO1xuICB9O1xufVxuIl19